from tkinter import *
import tkinter.font as tkFont
import math

# globally declare the expression variable 
expression = "" 
  
  
# Function to update expressiom 
# in the text entry box 
def press(num): 
    # point out the global expression variable 
    global expression 

    # concatenation of string 
    expression = expression + str(num) 
  
    # update the expression by using set method 
    equation.set(expression) 
  
  
# Function to evaluate the final expression 
def equalpress(): 
    # Try and except statement is used 
    # for handling the errors like zero 
    # division error etc. 
  
    # Put that code inside the try block 
    # which may generate the error 
    try: 
  
        global expression 
  
        # eval function evaluate the expression 
        # and str function convert the result 
        # into string 
        total = str(eval(expression)) 
  
        equation.set(total) 
  
        # initialze the expression variable 
        # by empty string 
        expression = "" 
  
    # if error is generate then handle 
    # by the except block 
    except: 
  
        equation.set(" error ") 
        expression = "" 

def resize():
    textSize = fontSize.cget('size') + 20
    fontSize.configure(size = textSize)
    

#Function for clearing calculator    
def clear():
    global expression
    global result
    expression = ""
    #result = ""
    equation.set("")

def sqrt():
    global expression
    if (expression == ""):
        expression = 0
    squareRooted = math.sqrt(int(expression))
    equation.set(squareRooted)
    expression = ""

  
# Driver code 
if __name__ == "__main__": 
    gui = Tk()
    gui.configure(background="#e0ecf4")
    gui.title("Basic Calculator")
    gui.geometry("330x200")
    fontSize = tkFont.Font(size=10)
    
    equation = StringVar()
    expression_field = Entry(gui, border=5, textvariable=equation)

    expression_field.grid(columnspan=5, ipadx=70, ipady=5)

    equation.set('')
    
    # Individual Button Setup
    button1 = Button(gui, text=' 1 ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                     command=lambda: press(1), height=2, width=7) 
    button1.grid(row=2, column=0, sticky=(N, S, E, W))
    
    button2 = Button(gui, text=' 2 ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                     command=lambda: press(2), height=2, width=7) 
    button2.grid(row=2, column=1, sticky=(N, S, E, W)) 
  
    button3 = Button(gui, text=' 3 ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                     command=lambda: press(3), height=2, width=7) 
    button3.grid(row=2, column=2, sticky=(N, S, E, W)) 
  
    button4 = Button(gui, text=' 4 ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                     command=lambda: press(4), height=2, width=7) 
    button4.grid(row=3, column=0, sticky=(N, S, E, W)) 
  
    button5 = Button(gui, text=' 5 ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                     command=lambda: press(5), height=2, width=7) 
    button5.grid(row=3, column=1, sticky=(N, S, E, W)) 
  
    button6 = Button(gui, text=' 6 ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                     command=lambda: press(6), height=2, width=7) 
    button6.grid(row=3, column=2, sticky=(N, S, E, W)) 
  
    button7 = Button(gui, text=' 7 ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                     command=lambda: press(7), height=2, width=7) 
    button7.grid(row=4, column=0, sticky=(N, S, E, W)) 
  
    button8 = Button(gui, text=' 8 ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                     command=lambda: press(8), height=2, width=7) 
    button8.grid(row=4, column=1, sticky=(N, S, E, W)) 
  
    button9 = Button(gui, text=' 9 ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                     command=lambda: press(9), height=2, width=7) 
    button9.grid(row=4, column=2, sticky=(N, S, E, W)) 
  
    button0 = Button(gui, text=' 0 ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                     command=lambda: press(0), height=2, width=7) 
    button0.grid(row=5, column=0, sticky=(N, S, E, W)) 
  
    plus = Button(gui, text=' + ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                  command=lambda: press("+"), height=2, width=7) 
    plus.grid(row=2, column=3, sticky=(N, S, E, W)) 
  
    minus = Button(gui, text=' - ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                   command=lambda: press("-"), height=2, width=7) 
    minus.grid(row=3, column=3, sticky=(N, S, E, W)) 
  
    multiply = Button(gui, text=' * ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                      command=lambda: press("*"), height=2, width=7) 
    multiply.grid(row=4, column=3, sticky=(N, S, E, W)) 
  
    divide = Button(gui, text=' / ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                    command=lambda: press("/"), height=2, width=7) 
    divide.grid(row=5, column=3, sticky=(N, S, E, W))
    
    fontfix = Button(gui, text=' Resize Ft ', font=fontSize, fg='#9ebcda',
                    bg='#8856a7', command=resize, height=2, width=7)
    fontfix.grid(row=2, column=4, sticky=(N, S, E, W))
    
    squareRoot = Button(gui, text=' sqrt ', font=fontSize, fg='#9ebcda',
                        bg='#8856a7', command= sqrt,
                        height=2, width=7)
    squareRoot.grid(row=3, column=4, sticky=(N, S, E, W))
    
    equal = Button(gui, text=' = ', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                   command=equalpress, height=2, width=7) 
    equal.grid(row=5, column=2, sticky=(N, S, E, W)) 
  
    clear = Button(gui, text='Clear', font=fontSize, fg='#9ebcda', bg='#8856a7', 
                   command=clear, height=2, width=7) 
    clear.grid(row=5, column='1', sticky=(N, S, E, W))

    gui.columnconfigure(0, weight=1)
    gui.columnconfigure(1, weight=1)
    gui.columnconfigure(2, weight=1)
    gui.columnconfigure(3, weight=1)
    gui.columnconfigure(4, weight=1)

    gui.rowconfigure(1, weight=1)
    gui.rowconfigure(2, weight=1)
    gui.rowconfigure(3, weight=1)
    gui.rowconfigure(4, weight=1)
    gui.rowconfigure(5, weight=1)
    # start the GUI 
    gui.mainloop() 
